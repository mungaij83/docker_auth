# LDAP server authentication example.
# See reference.yml for additional options.

server:
  addr: :5001
  certificate: /ssl/certificate.pem
  key: /ssl/server.pem
token:  # Settings for the tokens.
  issuer: "Auth-Service"  # Must match issuer in the Registry config.
  expiration: 900
  jwt_key: /ssl/jwt_key.pem
  jwt_cert: /ssl/jwt_cert.pem
  jwt_alt_key: /ssl/jwt_alt_key.pem
  jwt_alt_cert: /ssl/jwt_alt_cert.pem
oauth_2:
  token_db: 'oauth_2_tokens'
  expiry_time: 10
  clients:
    k8:
      client_id: 'k8'
      client_name: 'Kubernetes'
      client_secret: 'k8Secret'
      scopes:
        - all
      redirect_url: 'https://10.20.2.3/auth?token_id=${token_id}&refresh_token=${refresh_token}'
ldap_auth:
  # Addr is the hostname:port or ip:port
  addr: 172.19.0.1:389
  # Setup tls connection method to be
  # "" or "none": the communication won't be encrypted
  # "always": setup LDAP over SSL/TLS
  # "starttls": sets StartTLS as the encryption method
  tls: none
  # set to true to allow insecure tls
  insecure_tls_skip_verify: false
  # set this to specify the ca certificate path
  ca_certificate:
  # In case bind DN and password is required for querying user information,
  # specify them here. Plain text password is read from the file.
  bind_dn: cn=readonly,dc=techlab,dc=com
  # User query settings. ${account} is expanded from auth request 
  base: ou=devops,dc=techlab,dc=com
  filter: (&(uid=${account})(objectClass=*))
  group_filter: (&(objectClass=groupOfNames)(member=cn=${account},ou=devops,dc=techlab,dc=com))
  bind_password: readonly_pw
  labels:
    username:
      attribute: uid
    title:
      attribute: description
    organization:
      attribute: o
    department:
      attribute: ou
    groups:
      attribute: memberOf
      parse_cn: true
acl:
  # This will allow authenticated users to pull/push
  - match:
      account: /.+/
    actions: ['*']
